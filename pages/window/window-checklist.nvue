<template>
    <view class="window-checklist-body">
		<view class="window-checklist-options">
				<uni-segmented-control :current="current" :values="items" :style-type="styleType" :active-color="activeColor" @clickItem="onClickItem" />
		</view>
        <view class="window-checklist-line-h"></view>
        <swiper :current="current" class="window-checklist-swiper-box" :duration="300" @change="ontabchange">
			<swiper-item class="window-checklist-swiper-item">
				<scroll-view class="scroll-v list" scroll-y>
					<view class="window-checklist-food-list" v-if="current === 0">
							<window-foods ref="windowFoods"></window-foods>
							<!-- 菜系 -->
					</view>
				</scroll-view>
			</swiper-item>
			<swiper-item class="window-checklist-swiper-item">
				<scroll-view class="scroll-v list" scroll-y>
					<view class="window-checklist-food-hot" v-if="current === 1">
							<window-hot ref="windowHot"></window-hot>
					</view>
				</scroll-view>
			</swiper-item>
			<swiper-item class="window-checklist-swiper-item">
				<scroll-view class="scroll-v list" scroll-y>
					<view class="window-checklist-food-comment" v-if="current === 2">
						<window-comment ref="windowComment"></window-comment>
					</view>
				</scroll-view>
			</swiper-item>
        </swiper>
    </view>
</template>
<script>

/*    // 缓存每页最多
    const MAX_CACHE_DATA = 100;
    // 缓存页签数量
    const MAX_CACHE_PAGE = 3; */
	import windowFoods from './detail/window-foods.nvue';
	import windowHot from './detail/window-hot.nvue';
	import windowComment from './detail/window-comment.vue';
	import {request_ssm} from '../../common/js/request_ssm.js'
    export default {
        components: {
			windowFoods,
            windowHot,
			windowComment
        },
		mixins: [],
        data() {
            return {
				windowId:0,
				current: 0,//当前页
				items: ['菜系', '热门', '评价'],//总页数为3
				activeColor: '#4cd964',//被选中页的颜色
				styleType: 'button',//样式 button或者text
            }
        },
        onLoad(res) {
        	console.log("windowid:"+JSON.stringify(res));
			let id=res.windowid;
			this.windowId=id;
			//console.log("id:"+id);
			this.getWindowFoodsList(id);
			
				/* this.$refs.windowFoods.windowFoodsList=[
						{
							title:"糖醋鲤鱼",
							desc:"好吃好吃真好吃",
							img:"https://public-1301701929.cos.ap-shanghai.myqcloud.com/test/s1.jepg",
							price:"9.9",
							extra:"test"	
						}
					]; */
				//console.log("this.$refs.windowFoods"+this.$refs.windowFoods);
			
        },
		/* onReady(){
			this.test();
		}, */
        methods: {
			/* test(){
				let er= request_ssm('shopShow/getShopShowList',{
						id:1
					});
					console.log("123");
			}, */
			//获取商品列表数据
			async getWindowFoodsList(id){
				// #ifdef APP-PLUS
				console.log("手机端");
				let res=await request_ssm('shopShow/getShopShowList',{
						id:id
					});
				// #endif
				// #ifdef H5
				console.log("网页端");
				let res=await this.$request_ssm('shopShow/getShopShowList',{
						id:id
					});
				// #endif
				
				
				//console.log("【shopShow/getShopShowList】："+JSON.stringify(res));
				if(res.code==100){
					console.log("result:"+res.data.result);
					let result= JSON.parse(res.data.result);
					this.$nextTick(() => {
						
						let windowFoodsList=[];
						result.forEach((item,index)=>{
							const {
								productShowId:productid,
								productShowTitle:title,
								productShowImg:img,
								productShowDesc:desc,
								productShowPrice:price,
								productShowExtra:extra,
								productShopId:shopid,
							}=item;
							windowFoodsList.push({
								productid,
								title,
								img,
								desc,
								price,
								extra,
								shopid
							})
						})
						this.$refs.windowFoods.windowFoodsList=windowFoodsList;
					});
				}else{
					console.log("请求错误"+res);
				}
				
			},
			//获取评论列表
			async getWindowCommentsList(id){},
			//获取热门列表
			async getWindowHotsList(id){},
			//窗口菜单选项点击事件
			onClickItem(e) {
				if (this.current !== e.currentIndex) {
					this.current = e.currentIndex
					console.log("current"+this.current);
				}
			},
			//滑动页面改变
            ontabchange(e) {
				
				console.log("tabIndex:"+e.detail.current)
                let index = e.target.current || e.detail.current;
                this.switchTab(index);
            },
			//切换页面
            switchTab(index) {
				this.getList(index);
                if (this.current === index) {
                    return;
                }
                this.current = index;
            },
			getList(index){
				if(index==0){
					this.getWindowFoodsList(this.windowId);
				}else if(index==1){
					
				}else if(index==2){
					
				}
			}
        }
    }
</script>

<style lang="scss">
    /* #ifndef APP-PLUS-NVUE */
	//nvue页面布局不支持百分比，故采用条件编译
    page {
        width: 100%;
        min-height: 100%;
        display: flex;
    }
    /* #endif */
	.window-checklist-body {
		/* 侧边栏大小固定后，将内容区flex：1，内容区则会自动放大占满剩余空间。 */
		flex: 1;
		flex-direction: column;
		overflow: hidden;
		background-color: #ffffff;
		/* background-color: #efeff4; */
		/* #ifdef MP-ALIPAY || MP-BAIDU */
		height: 100vh;
		/* #endif */
	}
	.window-checklist-options{
		padding: 0px 30px;
		margin-top: 20px;
	}
	/* 菜系菜单与内容之间的缓冲线 */
	.window-checklist-line-h {
		/* height: 1rpx;
		background-color: #cccccc; */
		margin-bottom: 10rpx;
	}
	/* 同样占满剩余空间 */
	.window-checklist-swiper-box {
		  flex: 1;
	}
		
	.window-checklist-swiper-item {
		flex: 1;
		/* 解决h5不能滑动的bug*/
		flex-direction: row;
	}
	.scroll-v {
		flex: 1;
		/* #ifndef MP-ALIPAY */
		flex-direction: column;
		/* #endif */
	}
	.window-checklist-food-list{
		
		
	}
</style>
